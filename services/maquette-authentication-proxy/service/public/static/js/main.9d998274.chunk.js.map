{"version":3,"sources":["containers/LoggedOut/index.js","containers/Login/logo.svg","containers/Login/index.js","App.js","reportWebVitals.js","index.js"],"names":["LoggedOut","Pane","width","height","display","justifyContent","alignItems","Text","size","textAlign","Button","is","href","marginTop","Login","props","query","URLSearchParams","_","get","elevation","padding","marginBottom","src","Logo","alt","method","action","TextInputField","label","name","hint","type","value","App","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iLAUeA,MANf,WACI,OAAO,cAACC,EAAA,EAAD,CAAMC,MAAM,OAAOC,OAAO,OAAOC,QAAQ,OAAOC,eAAe,SAASC,WAAW,SAAnF,SACH,eAACC,EAAA,EAAD,CAAMC,KAAM,IAAKC,UAAU,SAA3B,oDAA2E,uBAAM,cAACC,EAAA,EAAD,CAAQC,GAAG,IAAIC,KAAK,IAAIJ,KAAO,IAAMK,UAAY,GAAjD,iC,0BCN1E,MAA0B,iCCyB1BC,MApBf,SAAeC,GACX,IAAMC,EAAQ,IAAIC,gBAAgBC,IAAEC,IAAIJ,EAAO,oBAAsB,IAErE,OAAO,cAACd,EAAA,EAAD,CAAMC,MAAM,OAAOC,OAAO,OAAOC,QAAQ,OAAOC,eAAe,SAASC,WAAW,SAAnF,SACH,eAACL,EAAA,EAAD,CAAMC,MAAQ,IAAMkB,UAAY,EAAIC,QAAU,GAA9C,UACI,cAACpB,EAAA,EAAD,CAAMqB,aAAe,GAArB,SACI,qBAAKC,IAAMC,EAAOtB,MAAO,IAAKuB,IAAI,mBAGtC,uBAAMC,OAAO,OAAOC,OAAO,SAA3B,UACI,cAACC,EAAA,EAAD,CAAgBC,MAAM,WAAWC,KAAK,WAAWC,KAAK,0DACtD,cAACH,EAAA,EAAD,CAAgBC,MAAM,WAAWG,KAAK,WAAWF,KAAK,aACtD,uBAAOE,KAAK,SAASC,MAAQjB,EAAMG,IAAI,aAAe,IAAMW,KAAK,aAEjE,cAACpB,EAAA,EAAD,CAAQsB,KAAK,SAAb,4B,eCJDE,MATf,WACE,OAAO,cAAC,IAAD,UACL,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,UAAUC,UAAYrC,IACxC,cAAC,IAAD,CAAOoC,KAAK,IAAIC,UAAYvB,UCEnBwB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.9d998274.chunk.js","sourcesContent":["import React from 'react';\n\nimport { Button, Pane, Text } from 'evergreen-ui'\n\nfunction LoggedOut() {\n    return <Pane width=\"100%\" height=\"100%\" display=\"flex\" justifyContent=\"center\" alignItems=\"center\">\n        <Text size={800} textAlign=\"center\">You have been logged out successfully. <br /><Button is=\"a\" href=\"/\" size={ 800 } marginTop={ 20 }>Back to Login</Button></Text>\n    </Pane>\n}\n\nexport default LoggedOut;","export default __webpack_public_path__ + \"static/media/logo.619f12f1.svg\";","import _ from 'lodash';\nimport React from 'react';\nimport { Button, Pane, TextInputField } from 'evergreen-ui'\nimport Logo from './logo.svg';\n\nfunction Login(props) {\n    const query = new URLSearchParams(_.get(props, 'location.search') ||Â '');\n\n    return <Pane width=\"100%\" height=\"100%\" display=\"flex\" justifyContent=\"center\" alignItems=\"center\">\n        <Pane width={ 520 } elevation={ 2 } padding={ 20 }>\n            <Pane marginBottom={ 20 }>\n                <img src={ Logo } width={240} alt=\"Company Logo\" />\n            </Pane>\n\n            <form method=\"post\" action=\"/login\">\n                <TextInputField label=\"Username\" name=\"username\" hint=\"Use one of the dummy users `alice`, `bob` or `clair`.\" />\n                <TextInputField label=\"Password\" type=\"password\" name=\"password\" />\n                <input type=\"hidden\" value={ query.get('redirect') || '/' } name=\"redirect\" />\n\n                <Button type=\"submit\">Login</Button>\n            </form>\n        </Pane>\n    </Pane>\n}\n\nexport default Login;","import React from 'react';\nimport LoggedOut from './containers/LoggedOut';\nimport Login from './containers/Login';\n\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\nfunction App() {\n  return <Router>\n    <Switch>\n      <Route exact path='/byebye' component={ LoggedOut } />\n      <Route path='/' component={ Login } />\n    </Switch>\n  </Router>;\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}